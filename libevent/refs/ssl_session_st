<def f='include/openssl/ssl.h' l='498' ll='574'/>
<size>352</size>
<doc f='include/openssl/ssl.h' l='472'>/*-
 * Lets make this into an ASN.1 type structure as follows
 * SSL_SESSION_ID ::= SEQUENCE {
 *      version                 INTEGER,        -- structure version number
 *      SSLversion              INTEGER,        -- SSL version number
 *      Cipher                  OCTET STRING,   -- the 3 byte cipher ID
 *      Session_ID              OCTET STRING,   -- the Session ID
 *      Master_key              OCTET STRING,   -- the master key
 *      KRB5_principal          OCTET STRING    -- optional Kerberos principal
 *      Key_Arg [ 0 ] IMPLICIT  OCTET STRING,   -- the optional Key argument
 *      Time [ 1 ] EXPLICIT     INTEGER,        -- optional Start Time
 *      Timeout [ 2 ] EXPLICIT  INTEGER,        -- optional Timeout ins seconds
 *      Peer [ 3 ] EXPLICIT     X509,           -- optional Peer Certificate
 *      Session_ID_context [ 4 ] EXPLICIT OCTET STRING,   -- the Session ID context
 *      Verify_result [ 5 ] EXPLICIT INTEGER,   -- X509_V_... code for `Peer&apos;
 *      HostName [ 6 ] EXPLICIT OCTET STRING,   -- optional HostName from servername TLS extension
 *      PSK_identity_hint [ 7 ] EXPLICIT OCTET STRING, -- optional PSK identity hint
 *      PSK_identity [ 8 ] EXPLICIT OCTET STRING,  -- optional PSK identity
 *      Ticket_lifetime_hint [9] EXPLICIT INTEGER, -- server&apos;s lifetime hint for session ticket
 *      Ticket [10]             EXPLICIT OCTET STRING, -- session ticket (clients only)
 *      Compression_meth [11]   EXPLICIT OCTET STRING, -- optional compression method
 *      SRP_username [ 12 ] EXPLICIT OCTET STRING -- optional SRP username
 *      }
 * Look in ssl/ssl_asn1.c for more details
 * I&apos;m using EXPLICIT tags so I can read the damn things using asn1parse :-).
 */</doc>
<mbr r='ssl_session_st::ssl_version' o='0' t='int'/>
<mbr r='ssl_session_st::key_arg_length' o='32' t='unsigned int'/>
<mbr r='ssl_session_st::key_arg' o='64' t='unsigned char [8]'/>
<mbr r='ssl_session_st::master_key_length' o='128' t='int'/>
<mbr r='ssl_session_st::master_key' o='160' t='unsigned char [48]'/>
<mbr r='ssl_session_st::session_id_length' o='544' t='unsigned int'/>
<mbr r='ssl_session_st::session_id' o='576' t='unsigned char [32]'/>
<mbr r='ssl_session_st::sid_ctx_length' o='832' t='unsigned int'/>
<mbr r='ssl_session_st::sid_ctx' o='864' t='unsigned char [32]'/>
<mbr r='ssl_session_st::psk_identity_hint' o='1152' t='char *'/>
<mbr r='ssl_session_st::psk_identity' o='1216' t='char *'/>
<mbr r='ssl_session_st::not_resumable' o='1280' t='int'/>
<mbr r='ssl_session_st::sess_cert' o='1344' t='struct sess_cert_st *'/>
<mbr r='ssl_session_st::peer' o='1408' t='X509 *'/>
<mbr r='ssl_session_st::verify_result' o='1472' t='long'/>
<mbr r='ssl_session_st::references' o='1536' t='int'/>
<mbr r='ssl_session_st::timeout' o='1600' t='long'/>
<mbr r='ssl_session_st::time' o='1664' t='long'/>
<mbr r='ssl_session_st::compress_meth' o='1728' t='unsigned int'/>
<mbr r='ssl_session_st::cipher' o='1792' t='const SSL_CIPHER *'/>
<mbr r='ssl_session_st::cipher_id' o='1856' t='unsigned long'/>
<mbr r='ssl_session_st::ciphers' o='1920' t='struct stack_st_SSL_CIPHER *'/>
<mbr r='ssl_session_st::ex_data' o='1984' t='CRYPTO_EX_DATA'/>
<mbr r='ssl_session_st::prev' o='2112' t='struct ssl_session_st *'/>
<mbr r='ssl_session_st::next' o='2176' t='struct ssl_session_st *'/>
<mbr r='ssl_session_st::tlsext_hostname' o='2240' t='char *'/>
<mbr r='ssl_session_st::tlsext_ecpointformatlist_length' o='2304' t='size_t'/>
<mbr r='ssl_session_st::tlsext_ecpointformatlist' o='2368' t='unsigned char *'/>
<mbr r='ssl_session_st::tlsext_ellipticcurvelist_length' o='2432' t='size_t'/>
<mbr r='ssl_session_st::tlsext_ellipticcurvelist' o='2496' t='unsigned char *'/>
<mbr r='ssl_session_st::tlsext_tick' o='2560' t='unsigned char *'/>
<mbr r='ssl_session_st::tlsext_ticklen' o='2624' t='size_t'/>
<mbr r='ssl_session_st::tlsext_tick_lifetime_hint' o='2688' t='long'/>
<mbr r='ssl_session_st::srp_username' o='2752' t='char *'/>
